{"version":3,"file":"static/js/184.9f804e39.chunk.js","mappings":"wRAGaA,EAAQC,EAAAA,EAAAA,GAAH,gFAMLC,EAAOD,EAAAA,EAAAA,GAAH,mFAMJE,EAAWF,EAAAA,EAAAA,GAAH,yCAIRG,GAAYH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,0G,mGC0BtB,UAvCmB,WACjB,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BC,EAAAA,EAAAA,MAA5B,eAAOC,EAAP,KAAeC,EAAf,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACHF,EAAOG,IAAI,WAGhBC,EAAAA,EAAAA,IAAiBJ,EAAOG,IAAI,UAAUE,KAAKP,KAC1C,CAACE,KAGF,4BACE,SAAC,KAAD,CACEM,cAAe,CAAEC,MAAO,IACxBC,SAAU,SAACC,EAAQC,GACjBT,EAAUQ,GACVC,EAAQC,aAJZ,UAOE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,yBAIHf,EAAOiB,OAAS,IACf,SAAC,KAAD,UACGjB,EAAOkB,KAAI,SAAAC,GAAK,OACf,SAAC,KAAD,WACE,SAAC,KAAD,CAAWC,GAAE,UAAKD,EAAME,IAAxB,SAA+BF,EAAMG,SADxBH,EAAME,c,0MCjCjCE,IAAAA,SAAAA,QAAyB,gCAClB,IAAMC,EAAM,mCAEZ,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBF,IAAAA,IAAA,sCAAyCC,IAF7D,cAEGE,EAFH,yBAGIA,EAASC,KAAKC,SAHlB,gCAKHC,QAAQC,IAAR,MALG,gFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BV,GAA5B,gGAEoBE,IAAAA,IAAA,gBAAmBF,EAAnB,oBAAiCG,IAFrD,cAEGE,EAFH,yBAGIA,EAASC,MAHb,gCAKHE,QAAQC,IAAR,MALG,gFASA,SAAevB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCG,GAAhC,gGAEoBa,IAAAA,IAAA,+BACGC,EADH,kBACgBd,IAHpC,cAEGgB,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA4BX,GAA5B,gGAEoBE,IAAAA,IAAA,gBAAmBF,EAAnB,4BAAyCG,IAF7D,cAEGE,EAFH,yBAGIA,EAASC,KAAKM,MAHlB,gCAKHJ,QAAQC,IAAR,MALG,gFASA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bb,GAA/B,gGAEoBE,IAAAA,IAAA,gBAAmBF,EAAnB,4BAAyCG,IAF7D,cAEGE,EAFH,yBAGIA,EAASC,KAAKC,SAHlB,gCAKHC,QAAQC,IAAR,MALG","sources":["components/HomePage/HomePage.styled.jsx","components/MoviesPage/MoviesPage.jsx","services/movieSearchApi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  font-size: 32px;\n  color: #003d93;\n  margin: 15px;\n`;\n\nexport const List = styled.ol`\n  padding: 20px 15px;\n  margin: 0;\n  margin-left: 15px;\n`;\n\nexport const ListItem = styled.li`\n  padding: 5px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  :hover {\n    color: #79aaff;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { getMoviesByQuery } from 'services/movieSearchApi';\nimport { useSearchParams } from 'react-router-dom';\nimport { List, ListItem, MovieLink } from 'components/HomePage/HomePage.styled';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [params, setParams] = useSearchParams();\n\n  useEffect(() => {\n    if (!params.get('query')) {\n      return;\n    }\n    getMoviesByQuery(params.get('query')).then(setMovies);\n  }, [params]);\n\n  return (\n    <div>\n      <Formik\n        initialValues={{ query: '' }}\n        onSubmit={(values, actions) => {\n          setParams(values);\n          actions.resetForm();\n        }}\n      >\n        <Form>\n          <Field type=\"text\" name=\"query\"></Field>\n          <button type=\"submit\">Search</button>\n        </Form>\n      </Formik>\n\n      {movies.length > 0 && (\n        <List>\n          {movies.map(movie => (\n            <ListItem key={movie.id}>\n              <MovieLink to={`${movie.id}`}>{movie.title}</MovieLink>\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const KEY = '3662e1e1e310f2d86e2df06898df7080';\n\nexport async function getPopularMovies() {\n  try {\n    const response = await axios.get(`trending/movie/week?api_key=${KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const response = await axios.get(`movie/${id}?api_key=${KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesByQuery(query) {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(id) {\n  try {\n    const response = await axios.get(`movie/${id}/credits?api_key=${KEY}`);\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["Title","styled","List","ListItem","MovieLink","Link","useState","movies","setMovies","useSearchParams","params","setParams","useEffect","get","getMoviesByQuery","then","initialValues","query","onSubmit","values","actions","resetForm","type","name","length","map","movie","to","id","title","axios","KEY","getPopularMovies","response","data","results","console","log","getMovieById","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}