{"version":3,"file":"static/js/247.447fb8b0.chunk.js","mappings":"wLAiCA,UA7Ba,SAAC,GAAY,IAAVA,EAAS,EAATA,GACd,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAOA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaL,GAAIM,KAAKH,KACrB,CAACH,KAGF,wBACGE,EAAKK,OAAS,GACbL,EAAKM,KAAI,SAAAC,GACP,OACE,2BACE,gBACEC,MAAM,QACNC,IAdO,sCAcaF,EAAMG,aAC1BC,IAAI,MAEN,uBAAIJ,EAAMK,QACV,uCAAeL,EAAMM,cACrB,oBARON,EAAMT","sources":["components/Cast/Cast.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { getMovieCast } from 'services/movieSearchApi';\n\nconst Cast = ({ id }) => {\n  const [cast, setCast] = useState([]);\n  const imageBaseUrl = 'https://image.tmdb.org/t/p/original';\n\n  useEffect(() => {\n    getMovieCast(id).then(setCast);\n  }, [id]);\n\n  return (\n    <ul>\n      {cast.length > 0 &&\n        cast.map(actor => {\n          return (\n            <li key={actor.id}>\n              <img\n                width=\"100px\"\n                src={imageBaseUrl + actor.profile_path}\n                alt=\"\"\n              />\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n              <hr />\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = { id: PropTypes.string.isRequired };\n"],"names":["id","useState","cast","setCast","useEffect","getMovieCast","then","length","map","actor","width","src","profile_path","alt","name","character"],"sourceRoot":""}