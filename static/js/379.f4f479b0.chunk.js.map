{"version":3,"file":"static/js/379.f4f479b0.chunk.js","mappings":"mQAEaA,EAAiBC,EAAAA,EAAAA,IAAH,0CAIdC,EAAeD,EAAAA,EAAAA,OAAH,gSAgBZE,EAAcF,EAAAA,EAAAA,IAAH,8CAIXG,EAAcH,EAAAA,EAAAA,KAAH,gP,SCTlBI,GAAUC,EAAAA,EAAAA,OAAK,kBAAM,gCACrBC,GAAOD,EAAAA,EAAAA,OAAK,kBAAM,iCAyExB,EAvEyB,WACvB,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaR,GAASS,KAAKL,KAC1B,CAACJ,IAGFG,IACE,4BACE,UAACX,EAAD,YACE,4BACE,UAACE,EAAD,CACEgB,KAAK,SACLC,QAAS,WACPN,GAAU,IAHd,WAME,SAACT,EAAD,IANF,cAQA,gBACEgB,MAAM,QACNC,IAtBS,sCAsBWV,EAAMW,cAC1BC,IAAKZ,EAAMa,cAGf,UAACrB,EAAD,YACE,wBAAKQ,EAAMc,MAAN,YAAmBd,EAAMe,aAAaC,MAAM,EAAG,GAA/C,QACL,wCAAqC,GAArBhB,EAAMiB,aAAtB,QACA,sCACA,uBAAIjB,EAAMkB,YACV,oCACA,uBAAIlB,EAAMmB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,eAGnD,mBACA,4BACE,mDACA,SAAC,KAAD,CACEC,MAAO,qBAAGC,SACG,CAAEC,MAAO,gBAAcC,GAEpCC,GAAG,OAJL,mBAQA,mBACA,SAAC,KAAD,CACEJ,MAAO,qBAAGC,SACG,CAAEC,MAAO,gBAAcC,GAEpCC,GAAG,UAJL,yBASF,mBACA,SAAC,EAAAC,SAAD,CAAUC,UAAU,gFAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAACpC,EAAD,CAAMqC,GAAIpC,OACtC,SAAC,KAAD,CAAOkC,KAAK,UAAUC,SAAS,SAACtC,EAAD,CAASuC,GAAIpC,gB,0MCjFxDqC,IAAAA,SAAAA,QAAyB,gCAClB,IAAMC,EAAM,mCAEZ,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBF,IAAAA,IAAA,sCAAyCC,IAF7D,cAEGE,EAFH,yBAGIA,EAASC,KAAKC,SAHlB,gCAKHC,QAAQC,IAAR,MALG,gFASA,SAAepC,EAAtB,+CAAO,OAAP,oBAAO,WAA4B4B,GAA5B,gGAEoBC,IAAAA,IAAA,gBAAmBD,EAAnB,oBAAiCE,IAFrD,cAEGE,EAFH,yBAGIA,EAASC,MAHb,gCAKHE,QAAQC,IAAR,MALG,gFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEoBT,IAAAA,IAAA,+BACGC,EADH,kBACgBQ,IAHpC,cAEGN,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BX,GAA5B,gGAEoBC,IAAAA,IAAA,gBAAmBD,EAAnB,4BAAyCE,IAF7D,cAEGE,EAFH,yBAGIA,EAASC,KAAKO,MAHlB,gCAKHL,QAAQC,IAAR,MALG,gFASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bb,GAA/B,gGAEoBC,IAAAA,IAAA,gBAAmBD,EAAnB,4BAAyCE,IAF7D,cAEGE,EAFH,yBAGIA,EAASC,KAAKC,SAHlB,gCAKHC,QAAQC,IAAR,MALG","sources":["components/MovieDetailsPage/MovieDetailsPage.styled.jsx","components/MovieDetailsPage/MovieDetailsPage.jsx","services/movieSearchApi.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n`;\n\nexport const GoBackButton = styled.button`\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 700;\n  border: none;\n  border-radius: 5px;\n  background-color: #9c9d9d;\n  height: 30px;\n  cursor: pointer;\n  :hover {\n    background-color: #076dc183;\n  }\n`;\n\nexport const Description = styled.div`\n  margin-left: 20px;\n`;\n\nexport const ButtonImage = styled.span`\n  display: block;\n  width: 20px;\n  height: 20px;\n  background-image: url('https://cdn-icons-png.flaticon.com/128/725/725004.png');\n  background-position: center;\n  background-size: cover;\n  margin-right: 5px;\n`;\n","import { lazy, Suspense } from 'react';\nimport { useState, useEffect } from 'react';\nimport {\n  useParams,\n  useNavigate,\n  NavLink,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { getMovieById } from 'services/movieSearchApi';\nimport {\n  MovieContainer,\n  GoBackButton,\n  Description,\n  ButtonImage,\n} from './MovieDetailsPage.styled';\n\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\nconst Cast = lazy(() => import('components/Cast/Cast'));\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const imageBaseUrl = 'https://image.tmdb.org/t/p/original';\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getMovieById(movieId).then(setMovie);\n  }, [movieId]);\n\n  return (\n    movie && (\n      <div>\n        <MovieContainer>\n          <div>\n            <GoBackButton\n              type=\"button\"\n              onClick={() => {\n                navigate(-1);\n              }}\n            >\n              <ButtonImage></ButtonImage>Go back\n            </GoBackButton>\n            <img\n              width=\"400px\"\n              src={imageBaseUrl + movie.backdrop_path}\n              alt={movie.tagline}\n            />\n          </div>\n          <Description>\n            <h2>{movie.title + ` (${movie.release_date.slice(0, 4)})`}</h2>\n            <p>User score: {movie.vote_average * 10}%</p>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n            <h3>Genres</h3>\n            <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n          </Description>\n        </MovieContainer>\n        <hr />\n        <div>\n          <p>Additional information</p>\n          <NavLink\n            style={({ isActive }) =>\n              isActive ? { color: '#5fbcff' } : undefined\n            }\n            to=\"cast\"\n          >\n            Cast\n          </NavLink>\n          <br />\n          <NavLink\n            style={({ isActive }) =>\n              isActive ? { color: '#5fbcff' } : undefined\n            }\n            to=\"reviews\"\n          >\n            Reviews\n          </NavLink>\n        </div>\n        <hr />\n        <Suspense fallback={<h1>Загрузка...</h1>}>\n          <Routes>\n            <Route path=\"cast\" element={<Cast id={movieId} />}></Route>\n            <Route path=\"reviews\" element={<Reviews id={movieId} />}></Route>\n          </Routes>\n        </Suspense>\n      </div>\n    )\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const KEY = '3662e1e1e310f2d86e2df06898df7080';\n\nexport async function getPopularMovies() {\n  try {\n    const response = await axios.get(`trending/movie/week?api_key=${KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const response = await axios.get(`movie/${id}?api_key=${KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesByQuery(query) {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(id) {\n  try {\n    const response = await axios.get(`movie/${id}/credits?api_key=${KEY}`);\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["MovieContainer","styled","GoBackButton","Description","ButtonImage","Reviews","lazy","Cast","movieId","useParams","useState","movie","setMovie","navigate","useNavigate","useEffect","getMovieById","then","type","onClick","width","src","backdrop_path","alt","tagline","title","release_date","slice","vote_average","overview","genres","map","genre","name","join","style","isActive","color","undefined","to","Suspense","fallback","path","element","id","axios","KEY","getPopularMovies","response","data","results","console","log","getMoviesByQuery","query","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}